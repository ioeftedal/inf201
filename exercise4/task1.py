from pathlib import Path


# Function to create the exercises and assignments based off the number off exercises
# and when the assignments should start using list comprehension
def create_exercises(total_numbers: int, project_assignments_start: int) -> list:
    exercises = [
        assignment
        for exercise in range(1, total_numbers + 1)
        for assignment in (
            [f"exercise_{exercise}"]
            if exercise < project_assignments_start
            else [f"exercise_{exercise}a", f"exercise_{exercise}b"]
        )
    ]
    return exercises


# Function to create all the drectories based off the names generated by the create_exercises function
# It also genereates directories for all students inside the exercise directories
def create_setup(exercises: list, students: list) -> None:
    # Create the project directories:
    for project_name in exercises:
        project_dir = Path.cwd() / project_name
        if not project_dir.exists():
            project_dir.mkdir()
            for student in students:
                # Create student dir inside the project dir
                student_dir = project_dir / student
                if not student_dir.exists():
                    student_dir.mkdir()
                else:
                    print(
                        f"Directory for {student} already exists inside {project_name}"
                    )
        else:
            print(f"Project directory {project_name} already exists")


# Function to print out the file structure of current directory
def print_directory_structure() -> None:
    for path in Path.cwd().glob("*/*"):
        if path.is_dir():
            print(path.relative_to(Path.cwd()))


students = ["Ole", "Sarah"]
exercises = create_exercises(4, 3)
create_setup(exercises, students)
print_directory_structure()
